{
    "compilerOptions": {
        "target": "es5",
        "sourceMap": false,
        "module": "system",
        "noImplicitAny": true,
        "noEmit": false,
        "experimentalDecorators": true,
        "jsx": "react"
    },
    "filesGlob": [
        "./**/*.ts",
        "!./build/jspm_packages/**/*.ts",
        "!./node_modules/**/*.ts"
    ],
    "compileOnSave": true,
    "exclude": [
        "node_modules",
        "build/jspm_packages",
        "bower_components",
        "test"
    ],
    "files": [
        "./bower_components/rxjs/ts/core/abstractobserver.ts",
        "./bower_components/rxjs/ts/core/anonymousobservable.ts",
        "./bower_components/rxjs/ts/core/anonymousobserver.ts",
        "./bower_components/rxjs/ts/core/backpressure/controlled.ts",
        "./bower_components/rxjs/ts/core/backpressure/pausable.ts",
        "./bower_components/rxjs/ts/core/backpressure/pausablebuffered.ts",
        "./bower_components/rxjs/ts/core/backpressure/pauser.ts",
        "./bower_components/rxjs/ts/core/backpressure/stopandwait.ts",
        "./bower_components/rxjs/ts/core/backpressure/windowed.ts",
        "./bower_components/rxjs/ts/core/checkedobserver.ts",
        "./bower_components/rxjs/ts/core/concurrency/currentthreadscheduler.ts",
        "./bower_components/rxjs/ts/core/concurrency/defaultscheduler.ts",
        "./bower_components/rxjs/ts/core/concurrency/historicalscheduler.ts",
        "./bower_components/rxjs/ts/core/concurrency/immediatescheduler.ts",
        "./bower_components/rxjs/ts/core/concurrency/scheduleditem.ts",
        "./bower_components/rxjs/ts/core/concurrency/scheduleperiodicrecursive.ts",
        "./bower_components/rxjs/ts/core/concurrency/scheduler.periodic.ts",
        "./bower_components/rxjs/ts/core/concurrency/scheduler.recursive.ts",
        "./bower_components/rxjs/ts/core/concurrency/scheduler.ts",
        "./bower_components/rxjs/ts/core/concurrency/scheduler.wrappers.ts",
        "./bower_components/rxjs/ts/core/concurrency/virtualtimescheduler.ts",
        "./bower_components/rxjs/ts/core/disposables/booleandisposable.ts",
        "./bower_components/rxjs/ts/core/disposables/compositedisposable.ts",
        "./bower_components/rxjs/ts/core/disposables/disposable.ts",
        "./bower_components/rxjs/ts/core/disposables/refcountdisposable.ts",
        "./bower_components/rxjs/ts/core/es5.ts",
        "./bower_components/rxjs/ts/core/es6-iterable.d.ts",
        "./bower_components/rxjs/ts/core/es6-promise.d.ts",
        "./bower_components/rxjs/ts/core/es6.ts",
        "./bower_components/rxjs/ts/core/internal/bindcallback.ts",
        "./bower_components/rxjs/ts/core/internal/errors.ts",
        "./bower_components/rxjs/ts/core/internal/isequal.ts",
        "./bower_components/rxjs/ts/core/internal/priorityqueue.ts",
        "./bower_components/rxjs/ts/core/internal/util.ts",
        "./bower_components/rxjs/ts/core/joins/pattern.ts",
        "./bower_components/rxjs/ts/core/joins/plan.ts",
        "./bower_components/rxjs/ts/core/linq/connectableobservable.ts",
        "./bower_components/rxjs/ts/core/linq/groupedobservable.ts",
        "./bower_components/rxjs/ts/core/linq/observable/amb.ts",
        "./bower_components/rxjs/ts/core/linq/observable/ambproto.ts",
        "./bower_components/rxjs/ts/core/linq/observable/and.ts",
        "./bower_components/rxjs/ts/core/linq/observable/asobservable.ts",
        "./bower_components/rxjs/ts/core/linq/observable/average.ts",
        "./bower_components/rxjs/ts/core/linq/observable/buffer.ts",
        "./bower_components/rxjs/ts/core/linq/observable/bufferwithcount.ts",
        "./bower_components/rxjs/ts/core/linq/observable/bufferwithtime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/bufferwithtimeorcount.ts",
        "./bower_components/rxjs/ts/core/linq/observable/case.ts",
        "./bower_components/rxjs/ts/core/linq/observable/catch.ts",
        "./bower_components/rxjs/ts/core/linq/observable/catchproto.ts",
        "./bower_components/rxjs/ts/core/linq/observable/combinelatest.ts",
        "./bower_components/rxjs/ts/core/linq/observable/combinelatestproto.ts",
        "./bower_components/rxjs/ts/core/linq/observable/concat.ts",
        "./bower_components/rxjs/ts/core/linq/observable/concatall.ts",
        "./bower_components/rxjs/ts/core/linq/observable/concatmap.ts",
        "./bower_components/rxjs/ts/core/linq/observable/concatmapobserver.ts",
        "./bower_components/rxjs/ts/core/linq/observable/concatproto.ts",
        "./bower_components/rxjs/ts/core/linq/observable/count.ts",
        "./bower_components/rxjs/ts/core/linq/observable/create.ts",
        "./bower_components/rxjs/ts/core/linq/observable/debounce.ts",
        "./bower_components/rxjs/ts/core/linq/observable/defaultifempty.ts",
        "./bower_components/rxjs/ts/core/linq/observable/defer.ts",
        "./bower_components/rxjs/ts/core/linq/observable/delay.ts",
        "./bower_components/rxjs/ts/core/linq/observable/delaysubscription.ts",
        "./bower_components/rxjs/ts/core/linq/observable/dematerialize.ts",
        "./bower_components/rxjs/ts/core/linq/observable/distinct.ts",
        "./bower_components/rxjs/ts/core/linq/observable/distinctuntilchanged.ts",
        "./bower_components/rxjs/ts/core/linq/observable/dowhile.ts",
        "./bower_components/rxjs/ts/core/linq/observable/elementat.ts",
        "./bower_components/rxjs/ts/core/linq/observable/empty.ts",
        "./bower_components/rxjs/ts/core/linq/observable/every.ts",
        "./bower_components/rxjs/ts/core/linq/observable/expand.ts",
        "./bower_components/rxjs/ts/core/linq/observable/filter.ts",
        "./bower_components/rxjs/ts/core/linq/observable/finally.ts",
        "./bower_components/rxjs/ts/core/linq/observable/find.ts",
        "./bower_components/rxjs/ts/core/linq/observable/findindex.ts",
        "./bower_components/rxjs/ts/core/linq/observable/first.ts",
        "./bower_components/rxjs/ts/core/linq/observable/flatmap.ts",
        "./bower_components/rxjs/ts/core/linq/observable/flatmapfirst.ts",
        "./bower_components/rxjs/ts/core/linq/observable/flatmaplatest.ts",
        "./bower_components/rxjs/ts/core/linq/observable/flatmapwithmaxconcurrent.ts",
        "./bower_components/rxjs/ts/core/linq/observable/for.ts",
        "./bower_components/rxjs/ts/core/linq/observable/forkjoin.ts",
        "./bower_components/rxjs/ts/core/linq/observable/forkjoinproto.ts",
        "./bower_components/rxjs/ts/core/linq/observable/from.ts",
        "./bower_components/rxjs/ts/core/linq/observable/fromarray.ts",
        "./bower_components/rxjs/ts/core/linq/observable/fromcallback.ts",
        "./bower_components/rxjs/ts/core/linq/observable/fromevent.ts",
        "./bower_components/rxjs/ts/core/linq/observable/fromeventpattern.ts",
        "./bower_components/rxjs/ts/core/linq/observable/fromnodecallback.ts",
        "./bower_components/rxjs/ts/core/linq/observable/frompromise.ts",
        "./bower_components/rxjs/ts/core/linq/observable/generate.ts",
        "./bower_components/rxjs/ts/core/linq/observable/generatewithabsolutetime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/generatewithrelativetime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/groupby.ts",
        "./bower_components/rxjs/ts/core/linq/observable/groupbyuntil.ts",
        "./bower_components/rxjs/ts/core/linq/observable/groupjoin.ts",
        "./bower_components/rxjs/ts/core/linq/observable/if.ts",
        "./bower_components/rxjs/ts/core/linq/observable/ignoreelements.ts",
        "./bower_components/rxjs/ts/core/linq/observable/includes.ts",
        "./bower_components/rxjs/ts/core/linq/observable/indexof.ts",
        "./bower_components/rxjs/ts/core/linq/observable/interval.ts",
        "./bower_components/rxjs/ts/core/linq/observable/isempty.ts",
        "./bower_components/rxjs/ts/core/linq/observable/join.ts",
        "./bower_components/rxjs/ts/core/linq/observable/jortsort.ts",
        "./bower_components/rxjs/ts/core/linq/observable/jortsortuntil.ts",
        "./bower_components/rxjs/ts/core/linq/observable/just.ts",
        "./bower_components/rxjs/ts/core/linq/observable/last.ts",
        "./bower_components/rxjs/ts/core/linq/observable/let.ts",
        "./bower_components/rxjs/ts/core/linq/observable/manyselect.ts",
        "./bower_components/rxjs/ts/core/linq/observable/map.ts",
        "./bower_components/rxjs/ts/core/linq/observable/materialize.ts",
        "./bower_components/rxjs/ts/core/linq/observable/max.ts",
        "./bower_components/rxjs/ts/core/linq/observable/maxby.ts",
        "./bower_components/rxjs/ts/core/linq/observable/merge.ts",
        "./bower_components/rxjs/ts/core/linq/observable/mergeall.ts",
        "./bower_components/rxjs/ts/core/linq/observable/mergedelayerror.ts",
        "./bower_components/rxjs/ts/core/linq/observable/mergeproto.ts",
        "./bower_components/rxjs/ts/core/linq/observable/min.ts",
        "./bower_components/rxjs/ts/core/linq/observable/minby.ts",
        "./bower_components/rxjs/ts/core/linq/observable/multicast.ts",
        "./bower_components/rxjs/ts/core/linq/observable/never.ts",
        "./bower_components/rxjs/ts/core/linq/observable/observeon.ts",
        "./bower_components/rxjs/ts/core/linq/observable/of.ts",
        "./bower_components/rxjs/ts/core/linq/observable/ofarraychanges.ts",
        "./bower_components/rxjs/ts/core/linq/observable/ofobjectchanges.ts",
        "./bower_components/rxjs/ts/core/linq/observable/onerrorresumenext.ts",
        "./bower_components/rxjs/ts/core/linq/observable/onerrorresumenextproto.ts",
        "./bower_components/rxjs/ts/core/linq/observable/pairs.ts",
        "./bower_components/rxjs/ts/core/linq/observable/pairwise.ts",
        "./bower_components/rxjs/ts/core/linq/observable/partition.ts",
        "./bower_components/rxjs/ts/core/linq/observable/pipe.ts",
        "./bower_components/rxjs/ts/core/linq/observable/pluck.ts",
        "./bower_components/rxjs/ts/core/linq/observable/publish.ts",
        "./bower_components/rxjs/ts/core/linq/observable/publishlast.ts",
        "./bower_components/rxjs/ts/core/linq/observable/publishvalue.ts",
        "./bower_components/rxjs/ts/core/linq/observable/range.ts",
        "./bower_components/rxjs/ts/core/linq/observable/reduce.ts",
        "./bower_components/rxjs/ts/core/linq/observable/repeat.ts",
        "./bower_components/rxjs/ts/core/linq/observable/repeatproto.ts",
        "./bower_components/rxjs/ts/core/linq/observable/replay.ts",
        "./bower_components/rxjs/ts/core/linq/observable/retry.ts",
        "./bower_components/rxjs/ts/core/linq/observable/retrywhen.ts",
        "./bower_components/rxjs/ts/core/linq/observable/sample.ts",
        "./bower_components/rxjs/ts/core/linq/observable/scan.ts",
        "./bower_components/rxjs/ts/core/linq/observable/selectmanyobserver.ts",
        "./bower_components/rxjs/ts/core/linq/observable/sequenceequal.ts",
        "./bower_components/rxjs/ts/core/linq/observable/share.ts",
        "./bower_components/rxjs/ts/core/linq/observable/sharereplay.ts",
        "./bower_components/rxjs/ts/core/linq/observable/sharevalue.ts",
        "./bower_components/rxjs/ts/core/linq/observable/single.ts",
        "./bower_components/rxjs/ts/core/linq/observable/singleinstance.ts",
        "./bower_components/rxjs/ts/core/linq/observable/skip.ts",
        "./bower_components/rxjs/ts/core/linq/observable/skiplast.ts",
        "./bower_components/rxjs/ts/core/linq/observable/skiplastwithtime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/skipuntil.ts",
        "./bower_components/rxjs/ts/core/linq/observable/skipuntilwithtime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/skipwhile.ts",
        "./bower_components/rxjs/ts/core/linq/observable/skipwithtime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/some.ts",
        "./bower_components/rxjs/ts/core/linq/observable/spawn.ts",
        "./bower_components/rxjs/ts/core/linq/observable/start.ts",
        "./bower_components/rxjs/ts/core/linq/observable/startasync.ts",
        "./bower_components/rxjs/ts/core/linq/observable/startwith.ts",
        "./bower_components/rxjs/ts/core/linq/observable/subscribeon.ts",
        "./bower_components/rxjs/ts/core/linq/observable/sum.ts",
        "./bower_components/rxjs/ts/core/linq/observable/switch.ts",
        "./bower_components/rxjs/ts/core/linq/observable/switchfirst.ts",
        "./bower_components/rxjs/ts/core/linq/observable/take.ts",
        "./bower_components/rxjs/ts/core/linq/observable/takelast.ts",
        "./bower_components/rxjs/ts/core/linq/observable/takelastbuffer.ts",
        "./bower_components/rxjs/ts/core/linq/observable/takelastbufferwithtime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/takelastwithtime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/takeuntil.ts",
        "./bower_components/rxjs/ts/core/linq/observable/takeuntilwithtime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/takewhile.ts",
        "./bower_components/rxjs/ts/core/linq/observable/takewithtime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/tap.ts",
        "./bower_components/rxjs/ts/core/linq/observable/thendo.ts",
        "./bower_components/rxjs/ts/core/linq/observable/throttle.ts",
        "./bower_components/rxjs/ts/core/linq/observable/throw.ts",
        "./bower_components/rxjs/ts/core/linq/observable/timeinterval.ts",
        "./bower_components/rxjs/ts/core/linq/observable/timeout.ts",
        "./bower_components/rxjs/ts/core/linq/observable/timer.ts",
        "./bower_components/rxjs/ts/core/linq/observable/timestamp.ts",
        "./bower_components/rxjs/ts/core/linq/observable/toarray.ts",
        "./bower_components/rxjs/ts/core/linq/observable/toasync.ts",
        "./bower_components/rxjs/ts/core/linq/observable/tomap.ts",
        "./bower_components/rxjs/ts/core/linq/observable/topromise.ts",
        "./bower_components/rxjs/ts/core/linq/observable/toset.ts",
        "./bower_components/rxjs/ts/core/linq/observable/transduce.ts",
        "./bower_components/rxjs/ts/core/linq/observable/using.ts",
        "./bower_components/rxjs/ts/core/linq/observable/when.ts",
        "./bower_components/rxjs/ts/core/linq/observable/while.ts",
        "./bower_components/rxjs/ts/core/linq/observable/window.ts",
        "./bower_components/rxjs/ts/core/linq/observable/windowwithcount.ts",
        "./bower_components/rxjs/ts/core/linq/observable/windowwithtime.ts",
        "./bower_components/rxjs/ts/core/linq/observable/windowwithtimeorcount.ts",
        "./bower_components/rxjs/ts/core/linq/observable/withlatestfrom.ts",
        "./bower_components/rxjs/ts/core/linq/observable/zip.ts",
        "./bower_components/rxjs/ts/core/linq/observable/ziparray.ts",
        "./bower_components/rxjs/ts/core/linq/observable/zipproto.ts",
        "./bower_components/rxjs/ts/core/notification.ts",
        "./bower_components/rxjs/ts/core/observable.ts",
        "./bower_components/rxjs/ts/core/observer-extras.ts",
        "./bower_components/rxjs/ts/core/observer-lite.ts",
        "./bower_components/rxjs/ts/core/observer.ts",
        "./bower_components/rxjs/ts/core/scheduledobserver.ts",
        "./bower_components/rxjs/ts/core/subjects/anonymoussubject.ts",
        "./bower_components/rxjs/ts/core/subjects/asyncsubject.ts",
        "./bower_components/rxjs/ts/core/subjects/behaviorsubject.ts",
        "./bower_components/rxjs/ts/core/subjects/replaysubject.ts",
        "./bower_components/rxjs/ts/core/subjects/subject.ts",
        "./bower_components/rxjs/ts/core/testing/mockdisposable.ts",
        "./bower_components/rxjs/ts/core/testing/mockobserver.ts",
        "./bower_components/rxjs/ts/core/testing/reactivetest.ts",
        "./bower_components/rxjs/ts/core/testing/recorded.ts",
        "./bower_components/rxjs/ts/core/testing/subscription.ts",
        "./bower_components/rxjs/ts/core/testing/testscheduler.ts",
        "./bower_components/rxjs/ts/es6-promise.es6.d.ts",
        "./bower_components/rxjs/ts/iterable.es6.d.ts",
        "./bower_components/rxjs/ts/rx.aggregates.d.ts",
        "./bower_components/rxjs/ts/rx.aggregates.es6.d.ts",
        "./bower_components/rxjs/ts/rx.all.d.ts",
        "./bower_components/rxjs/ts/rx.all.es6.d.ts",
        "./bower_components/rxjs/ts/rx.async.d.ts",
        "./bower_components/rxjs/ts/rx.async.es6.d.ts",
        "./bower_components/rxjs/ts/rx.backpressure.d.ts",
        "./bower_components/rxjs/ts/rx.backpressure.es6.d.ts",
        "./bower_components/rxjs/ts/rx.binding.d.ts",
        "./bower_components/rxjs/ts/rx.binding.es6.d.ts",
        "./bower_components/rxjs/ts/rx.coincidence.d.ts",
        "./bower_components/rxjs/ts/rx.coincidence.es6.d.ts",
        "./bower_components/rxjs/ts/rx.core.binding.d.ts",
        "./bower_components/rxjs/ts/rx.core.binding.es6.d.ts",
        "./bower_components/rxjs/ts/rx.core.d.ts",
        "./bower_components/rxjs/ts/rx.core.es6.d.ts",
        "./bower_components/rxjs/ts/rx.core.testing.d.ts",
        "./bower_components/rxjs/ts/rx.core.testing.es6.d.ts",
        "./bower_components/rxjs/ts/rx.d.ts",
        "./bower_components/rxjs/ts/rx.es6.d.ts",
        "./bower_components/rxjs/ts/rx.experimental.d.ts",
        "./bower_components/rxjs/ts/rx.experimental.es6.d.ts",
        "./bower_components/rxjs/ts/rx.joinpatterns.d.ts",
        "./bower_components/rxjs/ts/rx.joinpatterns.es6.d.ts",
        "./bower_components/rxjs/ts/rx.lite.d.ts",
        "./bower_components/rxjs/ts/rx.lite.es6.d.ts",
        "./bower_components/rxjs/ts/rx.lite.extras.d.ts",
        "./bower_components/rxjs/ts/rx.lite.extras.es6.d.ts",
        "./bower_components/rxjs/ts/rx.sorting.d.ts",
        "./bower_components/rxjs/ts/rx.sorting.es6.d.ts",
        "./bower_components/rxjs/ts/rx.testing.d.ts",
        "./bower_components/rxjs/ts/rx.testing.es6.d.ts",
        "./bower_components/rxjs/ts/rx.time.d.ts",
        "./bower_components/rxjs/ts/rx.time.es6.d.ts",
        "./bower_components/rxjs/ts/rx.virtualtime.d.ts",
        "./bower_components/rxjs/ts/rx.virtualtime.es6.d.ts",
        "./core/components/api/core-api-connector/core-api-connector.ts",
        "./core/components/api/core-api-emitter/core-api-emitter.ts",
        "./core/components/api/core-api-receiver/core-api-receiver.ts",
        "./typings/es6-promise/es6-promise.d.ts",
        "./typings/polymer/polymer.d.ts",
        "./typings/rx/rx-lite.d.ts",
        "./typings/rx/rx.d.ts",
        "./typings/tsd.d.ts",
        "./typings/webcomponents.js/webcomponents.js.d.ts"
    ]
}
